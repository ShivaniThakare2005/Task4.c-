#include <iostream>
#include <vector>

using namespace std;

const int R = 6;
const int C = 7;
char board[R][C];

void initializeB() {
    for (int i = 0; i < R; i++) {
        for (int j = 0; j < C; j++) {
            board[i][j] = ' ';
        }
    }
}
void printB() {
    for (int i = 0; i < R; i++) {
        for (int j = 0; j < C; j++) {
            cout << "|" << board[i][j];
        }
        cout << "|\n";
    }
    cout << "---------------\n";
    cout << " 0 1 2 3 4 5 6\n";
}
bool isColumnF(int col) {
    return board[0][col] != ' ';
}
bool dropDisc(int col, char playerDisc) {
    if (col < 0 || col >= C || isColumnF(col)) {
        cout << "Invalid move. Try again.\n";
        return false;
    }
    for (int i = R- 1; i >= 0; i--) {
        if (board[i][col] == ' ') {
            board[i][col] = playerDisc;
            return true;
        }
    }
    return false;  
}
bool checkWin(char playerDisc) {
    
    for (int r = 0; r < R; r++) {
        for (int c = 0; c < C - 3; c++) {
            if (board[r][c] == playerDisc && board[r][c + 1] == playerDisc &&
                board[r][c + 2] == playerDisc && board[r][c + 3] == playerDisc) {
                return true;
            }
        }
    }
    for (int r = 0; r < R - 3; r++) {
        for (int c = 0; c < C; c++) {
            if (board[r][c] == playerDisc && board[r + 1][c] == playerDisc &&
                board[r + 2][c] == playerDisc && board[r + 3][c] == playerDisc) {
                return true;
            }
        }
    }
    for (int r = 0; r < R - 3; r++) {
        for (int c = 0; c < C - 3; c++) {
            if (board[r][c] == playerDisc && board[r + 1][c + 1] == playerDisc &&
                board[r + 2][c + 2] == playerDisc && board[r + 3][c + 3] == playerDisc) {
                return true;
            }
        }
    }
    for (int r = 3; r < R; r++) {
        for (int c = 0; c < C - 3; c++) {
            if (board[r][c] == playerDisc && board[r - 1][c + 1] == playerDisc &&
                board[r - 2][c + 2] == playerDisc && board[r - 3][c + 3] == playerDisc) {
                return true;
            }
        }
    }

    return false;
}

int main() {
    initializeB();

    char p1 = 'X';
    char p2 = 'O';
    char currentP = p1;
    int column;
    bool gameOver = false;

    while (!gameOver) {
        printB();

        cout << "Player " << (currentP == p1 ? "1" : "2") << " (" << currentP << "), enter column (0-6): ";
        cin >> column;

        if (dropDisc(column, currentP)) {
            if (checkWin(currentP)) {
                printB();
                cout << "Player " << (currentP == p1 ? "1" : "2") << " wins!" << endl;
                gameOver = true;
            } else {
                currentP = (currentP == p1) ? p2 : p1;
            }
        }
    }

    return 0;
}
